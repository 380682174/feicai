##在程序的入口Application类加上@EnableConfigServer注解开启配置服务器的功能

spring.application.name=config-server
server.port=8888


##配置git仓库地址
spring.cloud.config.server.git.uri=https://github.com/forezp/SpringcloudConfig/
##配置仓库路径
spring.cloud.config.server.git.searchPaths=respo
##配置仓库的分支
spring.cloud.config.label=master
##访问git仓库的用户名
spring.cloud.config.server.git.username=
##访问git仓库的用户密码
spring.cloud.config.server.git.password=
##如果Git仓库为公开仓库，可以不填写用户名和密码，如果是私有仓库需要填写，本例子是公开仓库，放心使用


#远程仓库https://github.com/forezp/SpringcloudConfig/ 中有个文件config-client-dev.properties文件中有一个属性：
#
#foo = foo version 3
#
#启动程序：访问http://localhost:8888/foo/dev
#
#{"name":"foo","profiles":["dev"],"label":"master",
#"version":"792ffc77c03f4b138d28e89b576900ac5e01a44b","state":null,"propertySources":[]}
#
#证明配置服务中心可以从远程程序获取配置信息。
#
#http请求地址和资源文件映射如下:
#
#/{application}/{profile}[/{label}]
#/{application}-{profile}.yml
#/{label}/{application}-{profile}.yml
#/{application}-{profile}.properties
#/{label}/{application}-{profile}.properties




#2222222222222222222222
#高可用的分布式配置中心(Spring Cloud Config)(Finchley版本)

#在其pom.xml文件加上EurekaClient的起步依赖spring-cloud-starter-netflix-eureka-client

#配置文件application.yml，指定服务注册地址为http://localhost:8889/eureka/
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#最后需要在程序的启动类Application加上@EnableEureka的注解